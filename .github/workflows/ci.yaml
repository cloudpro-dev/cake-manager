#
# GitHub Actions workflow
#
# This workflow will build the application code using Java 11 and Maven, build a Docker image using
# the compiled artifact and publish the image to Docker Hub for easy CD integration.
#
# You will need to have two secrets setup in GitHub to be able to use this scripts:
#
# - DOCKERHUB_USERNAME - The name of the user who generated the Docker Hub Access Token
# - DOCKERHUB_TOKEN - The Docker Hub Access Token
#
# These values should correspond to a Docker Hub Access Token that you have previous setup
#

name: Docker Image CI

on:
  push:
    branches: [ master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Setup Java 11 for the build
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven

      # Build source code using Maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: cloudproconsulting/spring-security-oauth2-login

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}